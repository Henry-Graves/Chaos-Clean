//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/Scripts/Player+CameraControls/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""PlayerGroundMovement"",
            ""id"": ""43495e53-0342-4212-b17c-9d49bbd2a5f5"",
            ""actions"": [
                {
                    ""name"": ""HorizontalMovement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""9b1abfb4-7d9e-44a9-aed4-91ade9431497"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""2afd7eeb-db32-4543-be76-9dea2fef28b7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseX"",
                    ""type"": ""PassThrough"",
                    ""id"": ""711f6993-fda1-4a19-ac98-1863b4d00607"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseY"",
                    ""type"": ""PassThrough"",
                    ""id"": ""6610adde-6701-4422-bada-f2522dd89e3a"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""acdd7524-bf0e-4a46-97e0-86ed81e5b2b4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""ab56a4e4-955b-4497-9f60-b33730a12606"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mop"",
                    ""type"": ""Button"",
                    ""id"": ""883716c6-77e6-4b52-944d-4d66f461f5bd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""b62527b2-e713-43b2-9f72-34de4cc85e48"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseEquiptment"",
                    ""type"": ""Button"",
                    ""id"": ""5bead173-0b73-46e5-bd11-6448e8b4b443"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CycleEquiptment"",
                    ""type"": ""Button"",
                    ""id"": ""d0320ad2-c641-46a3-bc08-34f82124925e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HotKey1"",
                    ""type"": ""Button"",
                    ""id"": ""72735555-5963-4659-82ad-e452c8c7ef4c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HotKey2"",
                    ""type"": ""Button"",
                    ""id"": ""0f92e7df-2273-4849-a8a7-e728d47b1972"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HotKey3"",
                    ""type"": ""Button"",
                    ""id"": ""162b6cab-9daa-4e5e-87bb-8ee5fcc6f49f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HotKey4"",
                    ""type"": ""Button"",
                    ""id"": ""b172f042-c1b6-47df-9e15-e6be9fb12ef9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HotKey5"",
                    ""type"": ""Button"",
                    ""id"": ""fdcd0c08-778e-46c2-a634-c0d32597d62b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""f72fc754-d36a-4aaf-8673-ea01a0b7751a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b0064fce-e490-47ba-8a01-bbee1ccb8bf5"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""323e583d-bc6e-46ec-bc45-d9774646cf68"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""972417bc-d5f6-498e-8cff-0220a7640fb2"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""29ba9bfc-b158-488e-b0a3-665b8c3bd35e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9cc6b1f6-81a3-4c7c-8530-fd9589ea8d64"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7cf6fcb2-515c-40ef-9c7b-f38de674e112"",
                    ""path"": ""<Mouse>/delta/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4408931d-cd10-4ff7-b9ba-f5250f30488d"",
                    ""path"": ""<Mouse>/delta/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""95c05ff8-76e8-4fd3-bd35-77a7212f5b0d"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b13492a3-f992-47a8-862b-3403db97e633"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3914f4e2-0444-406b-a150-5555abc4aea1"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""451d5bc4-62dd-423f-b66d-f38f4e5a6092"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d319740d-dd77-4d53-acb6-5baba501695e"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseEquiptment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15f94534-c027-452f-b2b2-95d472354f67"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CycleEquiptment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""56381645-f25b-40fc-8efc-b636287daffd"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HotKey1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0cfd2e56-b274-4605-9672-0e6fa1f79bd9"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HotKey2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5b3d6be7-878a-406c-b02c-08a09d329e32"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HotKey3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a5123716-c8b0-4a74-8835-4d20be3db34c"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HotKey4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9e684890-3262-4a00-85a5-07a5982c83a5"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HotKey5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerGroundMovement
        m_PlayerGroundMovement = asset.FindActionMap("PlayerGroundMovement", throwIfNotFound: true);
        m_PlayerGroundMovement_HorizontalMovement = m_PlayerGroundMovement.FindAction("HorizontalMovement", throwIfNotFound: true);
        m_PlayerGroundMovement_Jump = m_PlayerGroundMovement.FindAction("Jump", throwIfNotFound: true);
        m_PlayerGroundMovement_MouseX = m_PlayerGroundMovement.FindAction("MouseX", throwIfNotFound: true);
        m_PlayerGroundMovement_MouseY = m_PlayerGroundMovement.FindAction("MouseY", throwIfNotFound: true);
        m_PlayerGroundMovement_Interact = m_PlayerGroundMovement.FindAction("Interact", throwIfNotFound: true);
        m_PlayerGroundMovement_Attack = m_PlayerGroundMovement.FindAction("Attack", throwIfNotFound: true);
        m_PlayerGroundMovement_Mop = m_PlayerGroundMovement.FindAction("Mop", throwIfNotFound: true);
        m_PlayerGroundMovement_Pause = m_PlayerGroundMovement.FindAction("Pause", throwIfNotFound: true);
        m_PlayerGroundMovement_UseEquiptment = m_PlayerGroundMovement.FindAction("UseEquiptment", throwIfNotFound: true);
        m_PlayerGroundMovement_CycleEquiptment = m_PlayerGroundMovement.FindAction("CycleEquiptment", throwIfNotFound: true);
        m_PlayerGroundMovement_HotKey1 = m_PlayerGroundMovement.FindAction("HotKey1", throwIfNotFound: true);
        m_PlayerGroundMovement_HotKey2 = m_PlayerGroundMovement.FindAction("HotKey2", throwIfNotFound: true);
        m_PlayerGroundMovement_HotKey3 = m_PlayerGroundMovement.FindAction("HotKey3", throwIfNotFound: true);
        m_PlayerGroundMovement_HotKey4 = m_PlayerGroundMovement.FindAction("HotKey4", throwIfNotFound: true);
        m_PlayerGroundMovement_HotKey5 = m_PlayerGroundMovement.FindAction("HotKey5", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerGroundMovement
    private readonly InputActionMap m_PlayerGroundMovement;
    private IPlayerGroundMovementActions m_PlayerGroundMovementActionsCallbackInterface;
    private readonly InputAction m_PlayerGroundMovement_HorizontalMovement;
    private readonly InputAction m_PlayerGroundMovement_Jump;
    private readonly InputAction m_PlayerGroundMovement_MouseX;
    private readonly InputAction m_PlayerGroundMovement_MouseY;
    private readonly InputAction m_PlayerGroundMovement_Interact;
    private readonly InputAction m_PlayerGroundMovement_Attack;
    private readonly InputAction m_PlayerGroundMovement_Mop;
    private readonly InputAction m_PlayerGroundMovement_Pause;
    private readonly InputAction m_PlayerGroundMovement_UseEquiptment;
    private readonly InputAction m_PlayerGroundMovement_CycleEquiptment;
    private readonly InputAction m_PlayerGroundMovement_HotKey1;
    private readonly InputAction m_PlayerGroundMovement_HotKey2;
    private readonly InputAction m_PlayerGroundMovement_HotKey3;
    private readonly InputAction m_PlayerGroundMovement_HotKey4;
    private readonly InputAction m_PlayerGroundMovement_HotKey5;
    public struct PlayerGroundMovementActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerGroundMovementActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @HorizontalMovement => m_Wrapper.m_PlayerGroundMovement_HorizontalMovement;
        public InputAction @Jump => m_Wrapper.m_PlayerGroundMovement_Jump;
        public InputAction @MouseX => m_Wrapper.m_PlayerGroundMovement_MouseX;
        public InputAction @MouseY => m_Wrapper.m_PlayerGroundMovement_MouseY;
        public InputAction @Interact => m_Wrapper.m_PlayerGroundMovement_Interact;
        public InputAction @Attack => m_Wrapper.m_PlayerGroundMovement_Attack;
        public InputAction @Mop => m_Wrapper.m_PlayerGroundMovement_Mop;
        public InputAction @Pause => m_Wrapper.m_PlayerGroundMovement_Pause;
        public InputAction @UseEquiptment => m_Wrapper.m_PlayerGroundMovement_UseEquiptment;
        public InputAction @CycleEquiptment => m_Wrapper.m_PlayerGroundMovement_CycleEquiptment;
        public InputAction @HotKey1 => m_Wrapper.m_PlayerGroundMovement_HotKey1;
        public InputAction @HotKey2 => m_Wrapper.m_PlayerGroundMovement_HotKey2;
        public InputAction @HotKey3 => m_Wrapper.m_PlayerGroundMovement_HotKey3;
        public InputAction @HotKey4 => m_Wrapper.m_PlayerGroundMovement_HotKey4;
        public InputAction @HotKey5 => m_Wrapper.m_PlayerGroundMovement_HotKey5;
        public InputActionMap Get() { return m_Wrapper.m_PlayerGroundMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerGroundMovementActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerGroundMovementActions instance)
        {
            if (m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface != null)
            {
                @HorizontalMovement.started -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnHorizontalMovement;
                @HorizontalMovement.performed -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnHorizontalMovement;
                @HorizontalMovement.canceled -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnHorizontalMovement;
                @Jump.started -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnJump;
                @MouseX.started -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnMouseX;
                @MouseX.performed -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnMouseX;
                @MouseX.canceled -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnMouseX;
                @MouseY.started -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnMouseY;
                @MouseY.performed -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnMouseY;
                @MouseY.canceled -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnMouseY;
                @Interact.started -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnInteract;
                @Attack.started -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnAttack;
                @Mop.started -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnMop;
                @Mop.performed -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnMop;
                @Mop.canceled -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnMop;
                @Pause.started -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnPause;
                @UseEquiptment.started -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnUseEquiptment;
                @UseEquiptment.performed -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnUseEquiptment;
                @UseEquiptment.canceled -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnUseEquiptment;
                @CycleEquiptment.started -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnCycleEquiptment;
                @CycleEquiptment.performed -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnCycleEquiptment;
                @CycleEquiptment.canceled -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnCycleEquiptment;
                @HotKey1.started -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnHotKey1;
                @HotKey1.performed -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnHotKey1;
                @HotKey1.canceled -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnHotKey1;
                @HotKey2.started -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnHotKey2;
                @HotKey2.performed -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnHotKey2;
                @HotKey2.canceled -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnHotKey2;
                @HotKey3.started -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnHotKey3;
                @HotKey3.performed -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnHotKey3;
                @HotKey3.canceled -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnHotKey3;
                @HotKey4.started -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnHotKey4;
                @HotKey4.performed -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnHotKey4;
                @HotKey4.canceled -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnHotKey4;
                @HotKey5.started -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnHotKey5;
                @HotKey5.performed -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnHotKey5;
                @HotKey5.canceled -= m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface.OnHotKey5;
            }
            m_Wrapper.m_PlayerGroundMovementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @HorizontalMovement.started += instance.OnHorizontalMovement;
                @HorizontalMovement.performed += instance.OnHorizontalMovement;
                @HorizontalMovement.canceled += instance.OnHorizontalMovement;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @MouseX.started += instance.OnMouseX;
                @MouseX.performed += instance.OnMouseX;
                @MouseX.canceled += instance.OnMouseX;
                @MouseY.started += instance.OnMouseY;
                @MouseY.performed += instance.OnMouseY;
                @MouseY.canceled += instance.OnMouseY;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @Mop.started += instance.OnMop;
                @Mop.performed += instance.OnMop;
                @Mop.canceled += instance.OnMop;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @UseEquiptment.started += instance.OnUseEquiptment;
                @UseEquiptment.performed += instance.OnUseEquiptment;
                @UseEquiptment.canceled += instance.OnUseEquiptment;
                @CycleEquiptment.started += instance.OnCycleEquiptment;
                @CycleEquiptment.performed += instance.OnCycleEquiptment;
                @CycleEquiptment.canceled += instance.OnCycleEquiptment;
                @HotKey1.started += instance.OnHotKey1;
                @HotKey1.performed += instance.OnHotKey1;
                @HotKey1.canceled += instance.OnHotKey1;
                @HotKey2.started += instance.OnHotKey2;
                @HotKey2.performed += instance.OnHotKey2;
                @HotKey2.canceled += instance.OnHotKey2;
                @HotKey3.started += instance.OnHotKey3;
                @HotKey3.performed += instance.OnHotKey3;
                @HotKey3.canceled += instance.OnHotKey3;
                @HotKey4.started += instance.OnHotKey4;
                @HotKey4.performed += instance.OnHotKey4;
                @HotKey4.canceled += instance.OnHotKey4;
                @HotKey5.started += instance.OnHotKey5;
                @HotKey5.performed += instance.OnHotKey5;
                @HotKey5.canceled += instance.OnHotKey5;
            }
        }
    }
    public PlayerGroundMovementActions @PlayerGroundMovement => new PlayerGroundMovementActions(this);
    public interface IPlayerGroundMovementActions
    {
        void OnHorizontalMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnMouseX(InputAction.CallbackContext context);
        void OnMouseY(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnMop(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnUseEquiptment(InputAction.CallbackContext context);
        void OnCycleEquiptment(InputAction.CallbackContext context);
        void OnHotKey1(InputAction.CallbackContext context);
        void OnHotKey2(InputAction.CallbackContext context);
        void OnHotKey3(InputAction.CallbackContext context);
        void OnHotKey4(InputAction.CallbackContext context);
        void OnHotKey5(InputAction.CallbackContext context);
    }
}
